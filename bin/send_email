#!/usr/bin/perl

$gpsTime = "$ARGV[0]\n";
$utcTime = "$ARGV[1]\n"; 
chomp($gpsTime);
$utcTime =~ s/_/ /g;

$URL = sprintf "https://ldas-jobs.ligo-wa.caltech.edu/~dtalukder/Projects/detchar/LigoCAM/PEM/pages/LigoCamHTML_%s.html", $gpsTime;

$RunDir = sprintf "/home/dtalukder/Projects/detchar/LigoCAM/PEM";

$getdisconnsize = -s '/home/dtalukder/Projects/detchar/LigoCAM/PEM/results/Disconnmail.txt';
$getdaqsize = -s '/home/dtalukder/Projects/detchar/LigoCAM/PEM/results/DAQfailmail.txt';

if (($getdisconnsize>0) && ($getdaqsize==0)){
   $AlertBy = sprintf "Disconnect";
} 
elsif (($getdisconnsize==0) && ($getdaqsize>0)){
   $AlertBy = sprintf "DAQ failure";
} 
elsif (($getdisconnsize>0) && ($getdaqsize>0)){
   $AlertBy = sprintf "Disconnect and DAQ failure";
} 
else {
   $AlertBy = sprintf "None";
}


    $emailsFile   = sprintf "%s/alertemails.txt", $RunDir;
    $messagesFile = sprintf "%s/alertmessages.log", $RunDir;

    $eheaderTable = {};
    $eheaderTable->{'SUBJECT'} = sprintf "[LigoCAM] %s alert for LHO PEM", $AlertBy;
    
    $noticeString = sprintf "Alert epoch: \n%s", $utcTime;
    $noticeString = sprintf "%s\nURL: \n<%s>", $noticeString, $URL;

    if ($AlertBy eq 'Disconnect') {
         $noticeString = sprintf "%s\n\nDisconnected channels:", $noticeString;
         open (disconn, '/home/dtalukder/Projects/detchar/LigoCAM/PEM/results/Disconnmail.txt');
            while (<disconn>) {
            chomp;
            $noticeString = sprintf "%s\n$_", $noticeString;
            }
         close (disconn);
     } elsif ($AlertBy eq 'DAQ failure') {
         $noticeString = sprintf "%s\n\nDAQ failure channels:", $noticeString;
         open (daq, '/home/dtalukder/Projects/detchar/LigoCAM/PEM/results/DAQfailmail.txt');
            while (<daq>) {
            chomp;
            $noticeString = sprintf "%s\n$_",$noticeString;
            }
         close (daq);
     } elsif ($AlertBy eq 'Disconnect and DAQ failure') {
         $noticeString = sprintf "%s\n\nDisconnected channels:", $noticeString;
         open (disconn, '/home/dtalukder/Projects/detchar/LigoCAM/PEM/results/Disconnmail.txt');
            while (<disconn>) {
            chomp;
            $noticeString = sprintf "%s\n$_", $noticeString;
            }
         close (disconn);
         $noticeString = sprintf "%s\n\nDAQ failure channels:", $noticeString;
         open (daq, '/home/dtalukder/Projects/detchar/LigoCAM/PEM/results/DAQfailmail.txt');
            while (<daq>) {
            chomp;
            $noticeString = sprintf "%s\n$_", $noticeString;
            }
         close (daq);
     }        
  
    $eheaderTable->{'MESSAGE'} = $noticeString;
 
    printf "$noticeString\n";  
    
    if ($AlertBy eq 'None') {
      print "None";
    } else{       
      AlertNotify($eheaderTable,$emailsFile,$messagesFile);
    }


sub AlertNotify {

  #use Switch;
  use strict;
  use warnings;
  use feature qw(switch say);

  my($eheaderRef)  = $_[0];
  my($emailFile)   = $_[1];
  my($messageFile) = $_[2];

  my(@emailList,$tableKey,$fromString,$replyToString,$subjectString,$messageString,
     $emailto,$emailString,$strLength,$catCommand,$mailCommand);

  #=== Open and read file with email addresses and phone numbers ===#
  open EMAILFILE, "<$emailFile"
    or die "Error opening email file $emailFile: $!";
  chomp(@emailList = <EMAILFILE>);
  close EMAILFILE;


  #=== Open files which will contain email message ===# 
  open LIGOCAMMESSAGE, ">>$messageFile"
    or die "Error opening message file $messageFile: $!";

  my($messageFileTemp) = sprintf "/home/dtalukder/Projects/detchar/LigoCAM/PEM/alertmessage_temp.txt";
  open LIGOCAMMESSAGETEMP, ">$messageFileTemp"
    or die "Error opening message file $messageFileTemp: $!";

  #=== Parse email header and message ===#
  $fromString    = '';
  $replyToString = '';
  $subjectString = '';
  $messageString = '';
  foreach $tableKey (keys %$eheaderRef) {
#    switch ($tableKey) {
#      case 'FROM'    { $fromString    = $eheaderRef->{$tableKey}; }
#      case 'REPLYTO' { $replyToString = $eheaderRef->{$tableKey}; }
#      case 'SUBJECT' { $subjectString = $eheaderRef->{$tableKey}; }
#      case 'MESSAGE' { $messageString = $eheaderRef->{$tableKey}; }
#    }
    given ($tableKey) {
      when ('FROM')    { $fromString    = $eheaderRef->{$tableKey}; }
      when ('REPLYTO') { $replyToString = $eheaderRef->{$tableKey}; }
      when ('SUBJECT') { $subjectString = $eheaderRef->{$tableKey}; }
      when ('MESSAGE') { $messageString = $eheaderRef->{$tableKey}; }
    }

  }

  if ($fromString eq '') {
     $fromString = sprintf "LigoCAM <dtalukder\@ldas-grid.ligo-wa.caltech.edu>";
  }
  if ($replyToString eq '') {
    $replyToString = sprintf "Dipongkar Talukder <talukderd\@gmail.com>";
  }
  if ($subjectString eq '') {
    $subjectString = sprintf "[LigoCAM]";
  }
  if ($messageString eq '') {
    return;
  }


  $emailString = "To:";
  foreach $emailto (@emailList) {
    $emailString = sprintf "%s %s,", $emailString, $emailto;
  }
  $strLength = length($emailString);
  $emailString   = substr($emailString,0,$strLength-1);

  printf LIGOCAMMESSAGETEMP "%s\n", $emailString;
  printf LIGOCAMMESSAGETEMP "From: %s\n", $fromString;
  printf LIGOCAMMESSAGETEMP "Reply-to: %s\n", $replyToString;
  printf LIGOCAMMESSAGETEMP "Subject: %s\n", $subjectString;
  printf LIGOCAMMESSAGETEMP "%s\n", $messageString;

  my($timeString) = localtime;
  printf LIGOCAMMESSAGE "\nDate: %s Pacific\n", $timeString;

  close LIGOCAMMESSAGETEMP;
  close LIGOCAMMESSAGE;

  $catCommand = sprintf "cat %s >> %s", $messageFileTemp, $messageFile;
  system $catCommand;

  $mailCommand = `/usr/sbin/sendmail -t < $messageFileTemp`;
  printf "$mailCommand\n";

}

